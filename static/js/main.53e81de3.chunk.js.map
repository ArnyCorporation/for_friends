{"version":3,"sources":["serviceWorker.js","engine/core/Giphy/types.js","engine/core/Giphy/searchReducerGiphy.js","engine/core/Spoonacular/types.js","engine/core/Spoonacular/searchReducerSpoonacular.js","store/RootReducer.js","engine/core/Giphy/selectors.js","engine/core/Giphy/actions.js","config/api.js","engine/core/Giphy/sagas/searchSaga.js","engine/core/Spoonacular/actions.js","engine/core/Spoonacular/sagas/searchSagaSpoonacular.js","store/rootSaga.js","store/createStore.js","styledComponents/styles.js","components/Spoonacular/Filters/Filters.jsx","components/Spoonacular/Filters/FiltersContainer.jsx","components/Spoonacular/Filters/index.js","components/Spoonacular/Results/Result.jsx","components/Spoonacular/Results/Results.jsx","components/Spoonacular/Results/index.js","components/Spoonacular/Results/ResultsContainer.jsx","components/Spoonacular/index.js","components/Spoonacular/Spoonacular.jsx","components/Giphy/Filters/Button/Button.jsx","components/Giphy/Filters/Button/index.js","components/Giphy/Filters/Filters.jsx","components/Giphy/Filters/FiltersContainer.jsx","components/Giphy/Filters/index.js","components/Giphy/Results/Result.jsx","components/Giphy/Results/Results.jsx","components/Giphy/Results/index.js","components/Giphy/Results/ResultsContainer.jsx","components/Giphy/Search/Search.jsx","components/Giphy/Search/SearchContainer.jsx","components/Giphy/Search/index.js","components/Giphy/index.js","components/Giphy/Giphy.jsx","components/Header/NavBar/Navbar.styled.js","components/Header/NavBar/Navbar.jsx","components/Header/index.js","components/Header/Header.jsx","components/App/App.jsx","components/App/index.js","index.jsx"],"names":["Boolean","window","location","hostname","match","addSearchResults","watchGetSearchResults","setFilter","initialState","searchResults","filter","searchReducerGiphy","state","action","type","types","payload","addSearchResultsSpoon","watchGetSearchResultsSpoon","searchResultsSpoon","searchReducerSpoonacular","combineReducers","produce","getFilters","getSearchResults","value","setSearchResults","results","giphy","giphyRandom","spoonacular","spoonacularRandom","setSearch","watchSearch","e","select","url","api","axios","get","data","put","console","log","debounce","setSearchResultsSpoon","setSearchSpoon","watchSearchSpoon","recipes","RootSaga","all","call","searchSagaSpoonacular","searchSaga","sagaMiddleware","createSagaMiddleware","store","createStore","RootReducer","composeWithDevTools","applyMiddleware","run","Button","styled","a","Filters","div","getSearchResultsSpoon","className","onClick","mapDispatchToProps","FiltersContainer","connect","Result","result","i","title","src","image","alt","aggregateLikes","href","sourceUrl","target","rel","Results","map","key","id","ResultsContainer","Spoonacular","Btn","props","random","images","downsized_large","length","Search","onChange","trim","SearchContainer","Giphy","Theme","bg","dark","light","red","Nav","nav","Logo","Ul","ul","Li","li","Navbar","to","Header","App","path","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.53e81de3.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export default {\n  addSearchResults: 'ADD_SEARCH_RESULTS',\n  watchGetSearchResults: 'WATCH_GET_SEARCH_RESULTS',\n  setFilter: 'SET_FILTER',\n};\n","import types from './types';\n\nconst initialState = {\n  searchResults: [],\n  filter: 'all',\n};\n\nconst searchReducerGiphy = (state = initialState, action) => {\n  switch (action.type) {\n    case types.addSearchResults:\n      state.searchResults = action.payload;\n      return state;\n    case types.setFilter:\n      state.filter = action.payload;\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport default searchReducerGiphy;\n","export default {\n  addSearchResultsSpoon: 'ADD_SEARCH_RESULTS_SPOON',\n  watchGetSearchResultsSpoon: 'WATCH_GET_SEARCH_RESULTS_SPOON',\n};\n","import types from './types';\n\nconst initialState = {\n  searchResultsSpoon: [],\n};\n\nconst searchReducerSpoonacular = (state = initialState, action) => {\n  switch (action.type) {\n    case types.addSearchResultsSpoon:\n      state.searchResultsSpoon = action.payload;\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport default searchReducerSpoonacular;\n","import { combineReducers } from 'redux-immer';\nimport produce from 'immer';\nimport searchReducerGiphy from '../engine/core/Giphy/searchReducerGiphy';\nimport searchReducerSpoonacular from '../engine/core/Spoonacular/searchReducerSpoonacular';\n\n\nexport default combineReducers(produce, {\n  searchReducerSpoonacular,\n  searchReducerGiphy,\n});\n","export const getFilters = (state) => state.searchReducerGiphy.filter;\nexport const getSearchResults = (state) => state.searchResults;\n","import types from './types';\n\nexport const getSearchResults = (value) => ({\n  type: types.watchGetSearchResults,\n  value,\n});\n\nexport const setSearchResults = (results) => ({\n  type: types.addSearchResults,\n  payload: results,\n});\n\nexport const setFilter = (filter) => ({\n  type: types.setFilter,\n  payload: filter,\n});\n","export default {\n  giphy: 'http://api.giphy.com/v1/gifs/search?api_key=4g5LURPswdvTEMPHYLunSif6lJTeBLo2',\n  giphyRandom: 'https://api.giphy.com/v1/gifs/random?api_key=4g5LURPswdvTEMPHYLunSif6lJTeBLo2&tag=&rating=G',\n  spoonacular: 'https://api.spoonacular.com/recipes/search?apiKey=36d4dd60d5b949a49bb8e741b73add7f',\n  spoonacularRandom: 'https://api.spoonacular.com/recipes/random?apiKey=36d4dd60d5b949a49bb8e741b73add7f',\n};\n","import { debounce, put, select } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { getFilters } from '../selectors';\nimport { setSearchResults } from '../actions';\nimport api from '../../../../config/api';\nimport types from '../types';\n\n\nfunction* setSearch(e) {\n  try {\n    const filter = yield select(getFilters);\n    let url;\n    switch (filter) {\n      case 'all':\n        url = `${api.giphy}&q=${e.value}&limit=20`;\n        break;\n      case 'random':\n        url = api.giphyRandom;\n        break;\n      default:\n        return url;\n    }\n    const data = yield axios.get(url);\n    return filter === 'all'\n      ? yield put(setSearchResults(data.data.data))\n      : yield put(setSearchResults([data.data.data]));\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction* watchSearch() {\n  yield debounce(1000, types.watchGetSearchResults, setSearch);\n}\n\nexport default watchSearch;\n","import types from './types';\n\nexport const getSearchResultsSpoon = () => ({\n  type: types.watchGetSearchResultsSpoon,\n});\n\nexport const setSearchResultsSpoon = (results) => ({\n  type: types.addSearchResultsSpoon,\n  payload: results,\n});\n","import { debounce, put } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { setSearchResultsSpoon } from '../actions';\nimport api from '../../../../config/api';\nimport types from '../types';\n\n\nfunction* setSearchSpoon() {\n  try {\n    const url = api.spoonacularRandom;\n    const data = yield axios.get(url);\n    console.log(data);\n    return yield put(setSearchResultsSpoon(data.data.recipes));\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction* watchSearchSpoon() {\n  yield debounce(500, types.watchGetSearchResultsSpoon, setSearchSpoon);\n}\n\nexport default watchSearchSpoon;\n","import { call, all } from 'redux-saga/effects';\n\nimport searchSaga from '../engine/core/Giphy/sagas/searchSaga';\nimport searchSagaSpoonacular from\n  '../engine/core/Spoonacular/sagas/searchSagaSpoonacular';\n\nfunction* RootSaga() {\n  yield all([\n    call(searchSagaSpoonacular),\n    call(searchSaga),\n  ]);\n}\n\nexport default RootSaga;\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga';\nimport RootReducer from './RootReducer';\nimport RootSaga from './rootSaga';\n\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(\n  RootReducer,\n  composeWithDevTools(\n    applyMiddleware(sagaMiddleware),\n  ),\n);\n\nsagaMiddleware.run(RootSaga);\n\nexport default store;\n","import styled from 'styled-components';\n\nexport const Button = styled.a`\n  display: inline-block;\n  border-radius: 3px;\n  padding: 0.5rem 0;\n  margin: 0.5rem 1rem;\n  width: 11rem;\n  background: transparent;\n  color: balck;\n  border: 2px solid black;\n  text-decoration: none;\n\n  &:visited, &:link {\n    color: black;\n  }`;\n\nexport const Wrapper = styled.div`\n  width: 1150px;\n`;\n","import React from 'react';\nimport './Filters.scss';\nimport { Button } from '../../../styledComponents/styles';\n\nconst Filters = ({ getSearchResultsSpoon }) => (\n  <div className=\"filter-spoon\">\n    <Button\n      className=\"filter-spoon__button\"\n      onClick={() => getSearchResultsSpoon()}\n    >\n          Random\n    </Button>\n  </div>\n);\nexport default Filters;\n","import { connect } from 'react-redux';\nimport { getSearchResultsSpoon } from '../../../engine/core/Spoonacular/actions';\nimport Filters from './Filters';\n\nconst mapDispatchToProps = {\n  getSearchResultsSpoon,\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps,\n)(Filters);\n","import FiltersContainer from './FiltersContainer';\n\nexport default FiltersContainer;\n","import React from 'react';\nimport './Result.scss';\n\nconst Result = ({ result, i }) => (\n  <div className=\"recipe\">\n    <h1\n      className=\"recipe__title\"\n    >\n      {result.title}\n    </h1>\n    <img\n      className=\"recipe__img\"\n      src={result.image}\n      alt=\"img\"\n    />\n    <p\n      className=\"recipe__likes\"\n    >\n      Лайки:\n      {' '}\n      {result.aggregateLikes}\n    </p>\n    <h2>\n      <a\n        className=\"recipe__link\"\n        href={result.sourceUrl}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        Рецептик\n      </a>\n    </h2>\n\n  </div>\n);\n\nexport default Result;\n","import React from 'react';\nimport Result from './Result';\n\nconst Results = ({ searchResults }) => {\n  console.log(searchResults);\n  return (\n    <>\n      {searchResults\n    && searchResults.map((result) => (\n      <Result\n        key={result.id}\n        result={result}\n      />\n    ))}\n    </>\n  );\n};\n\nexport default Results;\n","import ResultsContainer from './ResultsContainer';\n\n\nexport default ResultsContainer;\n","import { connect } from 'react-redux';\nimport Results from './Results';\n\nconst mapStateToProps = (state) => ({\n  searchResults: state.searchReducerSpoonacular.searchResultsSpoon,\n});\n\n\nexport default connect(\n  mapStateToProps,\n  null,\n)(Results);\n","import Spoonacular from './Spoonacular';\n\nexport default Spoonacular;\n","import React from 'react';\nimport './Spoonacular.scss';\nimport Filters from './Filters';\nimport Results from './Results';\n\nconst Spoonacular = () => (\n  <div>\n    <h1>Spoonacular recipes</h1>\n    <Filters />\n    <Results />\n  </div>\n);\n\nexport default Spoonacular;\n","import React from 'react';\nimport styled from 'styled-components';\n\n\nconst Btn = styled.a`\ndisplay: inline-block;\nborder-radius: 3px;\npadding: 0.5rem 0;\nmargin: 0.5rem 1rem;\nwidth: 11rem;\nbackground: transparent;\ncolor: balck;\nborder: 2px solid black;\ntext-decoration: none;\n\n&:visited, &:link {\n  color: black;\n}\n\n&:active {\n  color: green;\n  background-color: pink;\n}`;\n\nconst Button = (props) => {\n  const { random, setFilter, getSearchResults } = props;\n\n  const handleButton = (v) => {\n    setFilter(v);\n    getSearchResults();\n  };\n\n  return (\n    <div>\n      <Btn\n        onClick={() => handleButton('random')}\n      >\n        {random}\n      </Btn>\n    </div>\n  );\n};\n\n\nexport default Button;\n","import Button from './Button';\n\nexport default Button;\n","import React from 'react';\nimport './Filters.scss';\nimport Button from './Button';\n\nconst Filters = ({ setFilter, getSearchResults }) => (\n  <div>\n    <Button\n      setFilter={setFilter}\n      getSearchResults={getSearchResults}\n      random=\"random\"\n    />\n  </div>\n);\n\nexport default Filters;\n","import { connect } from 'react-redux';\nimport { setFilter, getSearchResults } from '../../../engine/core/Giphy/actions';\nimport Filters from './Filters';\n\nconst mapDispatchToProps = {\n  setFilter,\n  getSearchResults,\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps,\n)(Filters);\n","import FiltersContainer from './FiltersContainer';\n\nexport default FiltersContainer;\n","import React from 'react';\n\nconst Result = ({ result }) => {\n  console.log(result);\n  return (\n    <>\n      <img\n        src={result.images.downsized_large.url}\n        alt=\"img\"\n      />\n    </>\n  );\n};\n\nexport default Result;\n","import React from 'react';\nimport Result from './Result';\n\nconst Results = ({ searchResults }) => {\n  if (searchResults.length > 0) {\n    return searchResults.map((result) => <Result key={result.id} result={result} />);\n  } return <p>write to search something</p>;\n};\n\nexport default Results;\n","import ResultsContainer from './ResultsContainer';\n\n\nexport default ResultsContainer;\n","import { connect } from 'react-redux';\nimport Results from './Results';\n\nconst mapStateToProps = (state) => ({\n  searchResults: state.searchReducerGiphy.searchResults,\n});\n\nexport default connect(\n  mapStateToProps,\n  null,\n)(Results);\n","import React from 'react';\nimport './Search.scss';\n\nconst Search = (props) => {\n  const {\n    getSearchResults,\n    setFilter,\n  } = props;\n\n  const onInputSearch = (e) => {\n    if (e.target.value.trim() !== '') {\n      getSearchResults(e.target.value);\n      setFilter('all');\n    }\n  };\n\n  return (\n    <div>\n      <input\n        onChange={onInputSearch}\n        className=\"giphy__input\"\n      />\n    </div>\n  );\n};\n\nexport default Search;\n","import { connect } from 'react-redux';\nimport { getSearchResults, setFilter } from '../../../engine/core/Giphy/actions';\nimport Search from './Search';\n\nconst mapDispatchToProps = {\n  setFilter,\n  getSearchResults,\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps,\n)(Search);\n","import SearchContainer from './SearchContainer';\n\nexport default SearchContainer;\n","import Giphy from './Giphy';\n\nexport default Giphy;\n","import React from 'react';\nimport './Giphy.scss';\nimport Filters from './Filters';\nimport Results from './Results';\nimport Search from './Search';\n\nconst Giphy = () => (\n  <div className=\"giphy\">\n    <h1>Giphy</h1>\n    <Filters />\n    <Search />\n    <Results />\n  </div>\n);\n\nexport default Giphy;\n","import styled from 'styled-components';\n\nconst Theme = {\n  colors: {\n    bg: '#fff',\n    dark: '#24292e',\n    light: '#EEEEEE',\n    red: '#ff5851',\n  },\n};\n\nexport const Nav = styled.nav`\n  background: ${Theme.colors.dark};\n  color: ${Theme.colors.light};\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  a { color: white; text-decoration: none; }`;\n\nexport const Logo = styled.a`\n  font-weight: bold;\n  color: green;\n  margin-left: 1rem;\n  padding-right: 1rem;`;\n\nexport const Ul = styled.ul`\n  display: flex;\n  flex-wrap: nowrap;\n  overflow-x: auto;\n  -webkit-overflow-scrolling: touch;`;\n\nexport const Li = styled.li`\n  flex: 0 0 auto;\n  -webkit-box-align: center;\n  -webkit-box-pack: center;\n  -webkit-tap-highlight-color: transparent;\n  align-items: center;\n  color: #999;\n  height: 100%;\n  justify-content: center;\n  text-decoration: none;\n  -webkit-box-align: center;\n  -webkit-box-pack: center;\n  -webkit-tap-highlight-color: transparent;\n  align-items: center;\n  color: #999;\n  display: flex;\n  font-size: 14px;\n  height: 50px;\n  justify-content: center;\n  line-height: 16px;\n  margin: 0 10px ;\n  text-decoration: none;\n  white-space: nowrap;`;\n","import React from 'react';\nimport {\n  Link,\n} from 'react-router-dom';\nimport {\n  Nav, Logo, Ul, Li,\n} from './Navbar.styled';\n\nconst Navbar = () => (\n  <Nav>\n    <Logo>Max</Logo>\n    <Ul>\n      <Li>\n        <Link to=\"/giphy\">Giphy</Link>\n      </Li>\n      <Li>\n        <Link to=\"/spoonacular\">Spoonacular</Link>\n      </Li>\n    </Ul>\n  </Nav>\n);\n\nexport default Navbar;\n","import Header from './Header';\n\nexport default Header;\n","import React from 'react';\nimport Navbar from './NavBar/Navbar';\n\nconst Header = () => (\n  <div>\n    <Navbar />\n  </div>\n);\n\nexport default Header;\n","import React from 'react';\nimport './App.css';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n} from 'react-router-dom';\nimport Spoonacular from '../Spoonacular';\n\nimport Giphy from '../Giphy';\nimport Header from '../Header';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Header />\n        <Switch>\n\n          <Route path=\"/giphy\">\n            <Giphy />\n          </Route>\n\n          <Route path=\"/spoonacular\">\n            <Spoonacular />\n          </Route>\n\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import App from './App'\n\nexport default App \n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store/createStore';\nimport App from './components/App';\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}